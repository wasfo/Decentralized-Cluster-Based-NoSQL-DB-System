version: '3'
services:
  eureka-server:
    build: ./eureka-server
    image: spring-cloud/eureka
    container_name: eureka-server
    ports:
      - "9090:9090"
  node1:
    build: ./Worker
    container_name: node1
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9090/eureka
      - spring.application.name=Node
      - node.name=Node1
    volumes:
      - ./Storage/Node1-Storage:/app/Storage/Node1-Storage
      - ./Storage/Node1-Storage/users.json:/app/Storage/Node1-Storage/users.json
    ports:
      - "8081:8080"
    depends_on:
      - eureka-server
    links:
      - eureka-server
  node2:
    build: ./Worker
    container_name: node2
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:9090/eureka
      - spring.application.name=Node
      - node.name=Node2
    volumes:
      - ./Storage/Node2-Storage:/app/Storage/Node2-Storage
      - ./Storage/Node2-Storage/users.json:/app/Storage/Node2-Storage/users.json
    ports:
      - "8082:8080"
    depends_on:
      - eureka-server
    links:
      - eureka-server

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 22181:2181
#
#  broker:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - 29092:29092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1